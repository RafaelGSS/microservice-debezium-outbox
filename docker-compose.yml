version: "3"

services:
  zookeeper:
    image: debezium/zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888

  kafka:
    image: debezium/kafka:latest
    hostname: kafka
    restart: always
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  kafdrop:
    image: obsidiandynamics/kafdrop 
    ports:
      - 9000:9000
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  ms-user:
    restart: always
    build:
      context: ms-user/
      dockerfile: Dockerfile
    ports:
      - 3001:3000
    environment:
      DB_CONNECTION: 'mysql://root:toor@db-ms-user/ms_user'
    depends_on:
      - db-ms-user

  db-ms-user:
    image: mysql:8
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: 'toor'
    volumes:
      - 'db_ms_user_mysql_data:/var/lib/mysql'
      - ./ms-user/database/:/docker-entrypoint-initdb.d
    ports:
      - 1234:3306

  db-ms-user-connector:
    image: debezium/connect:latest
    ports:
     - 8083:8083
    links:
     - kafka
     - db-ms-user
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses

  gateway:
    build:
      context: gateway/
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - ms-user

volumes:
  db_ms_user_mysql_data:
